@My Kaggle output: https://www.kaggle.com/carolinfly0218/your-first-scikit-learn-model

import pandas as pd

melbourne_file_path = '../input/melbourne-housing-snapshot/melb_data.csv'
melbourne_data = pd.read_csv(melbourne_file_path)

# dropna drops missing values (think of na as "not available")
melbourne_data = melbourne_data.dropna(axis=0)

y = melbourne_data.Price

## Choose predictors
# use all of the variables except the target
melbourne_predictors = ['Rooms', 'Bathroom', 'Landsize', 'BuildingArea', 
                        'YearBuilt', 'Lattitude', 'Longtitude']

X = melbourne_data[melbourne_predictors]

## The steps to building and using a model are:
# 1. Define: What type of model will it be? A decision tree? Some other type of model? 
#            Some other parameters of the model type are specified too.
# 2. Fit:    Capture patterns from provided data. This is the heart of modeling.
# 3. Predict
# 4. Evaluate: Determine how accurate the model's predictions are.

from sklearn.tree import DecisionTreeRegressor

# Define model
melbourne_model = DecisionTreeRegressor()

# Fit model
melbourne_model.fit(X, y)

# apply model on training data
print("Making predictions for the following 5 houses:")
print(X.head())
print("The predictions are")
print(melbourne_model.predict(X.head()))

##########
# Example
##########

# Make predictions of housing prices

import pandas as pd
main_file_path = '../input/house-prices-advanced-regression-techniques/train.csv'
data = pd.read_csv(main_file_path)
print(data.columns)

predictors = ['LotArea', 'YearBuilt', '1stFlrSF', '2ndFlrSF', 
                        'FullBath', 'BedroomAbvGr', 'TotRmsAbvGrd']

X = data[predictors]

from sklearn.tree import DecisionTreeRegressor
# Define model
model = DecisionTreeRegressor()

model.fit(X, y)

print("Making predictions for the following 5 houses:")
print(X.head())
print("The predictions are")
print(model.predict(X.head()))

